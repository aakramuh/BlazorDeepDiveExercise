@page "/servers/add"

@inject NavigationManager NavigationManager

<h3>Add Server</h3>
<br />
<br />

<EditForm Model="server" class="form-horizontal" FormName="FormAddServer" OnValidSubmit="SaveAddedServer">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group row">
        <label for="serverName" class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-10">
            <InputText id="serverName" class="form-control" @bind-Value="server.Name" />
        </div>
        <div class="col">
            <ValidationMessage For="@(() => server.Name)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="serverCity" class="col-sm-2 col-form-label">City</label>
        <div class="col-sm-10">
            <InputText id="serverCity" class="form-control" @bind-Value="server.City" />
        </div>
        <div class="col">
            <ValidationMessage For="@(() => server.City)" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-2">Status</div>
        <div class="col-sm-10">
            <div class="form-check">
                <InputCheckbox id="serverIsOnline" class="form-check-input" @bind-Value="server.IsOnline" />
                <label class="form-check-label" for="serverIsOnline">Online</label>
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-10 offset-sm-2">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
</EditForm>

<br />



@code {

    [SupplyParameterFromForm()]
    private Server? server { get; set; } = new Server(){ IsOnline = false };



    private async Task SaveAddedServer()
    {
        if (server != null)
        {
            ServersRepository.AddServer(server);
            await InvokeAsync(() => NavigationManager.NavigateTo("/servers"));
        }

    }
}
